package org.cloudifysource.dsl;

import org.cloudifysource.dsl.internal.CloudifyDSLEntity;

/**
 * an SLA for processing unit deployment. this POJO is generated by the service 
 * groovy file and contains data regarding the JVM's memory allocation and 
 * processing unit availability. All types of processing units hold an SLA
 * object that defines the JVM's machine definitions.
 *   
 * @author adaml
 *
 */
@CloudifyDSLEntity(name="sla", clazz=Sla.class, allowInternalNode = true, allowRootNode = false)
public class Sla {

	private Integer memoryCapacity; 
	private Integer maxMemoryCapacity;
	private boolean highlyAvailable = true;
	private Integer memoryCapacityPerContainer;
	
	
	public Integer getMemoryCapacity(){
		return this.memoryCapacity;
	}
	
	/**
	 * Processing unit's maximum memory capacity
	 * @return - the processing unit's maximum memory capacity
	 */
	public Integer getMaxMemoryCapacity(){
		return this.maxMemoryCapacity;
	}
	
	/**
	 * Defines whether to create a backup for the Processing unit.
	 * @return - Availability state.
	 */
	public boolean getHighlyAvailable(){
		return this.highlyAvailable;
	}
	
	/**
	 * Memory capacity definition for GSC. 
	 * @return - the allocated memory capacity for container.
	 */
	public Integer getMemoryCapacityPerContainer(){
		return this.memoryCapacityPerContainer;
	}
	
	//Setters are all called by the DSL reader s.t values are being injected directly from the groovy DSL.
	public void setMemoryCapacity(Integer memoryCapacity){
		this.memoryCapacity = memoryCapacity;
	}
	
	public void setMaxMemoryCapacity(Integer maxMemoryCapacity){
		this.maxMemoryCapacity = maxMemoryCapacity;
	}
	
	public void setHighlyAvailable(boolean highlyAvailable){
		this.highlyAvailable = highlyAvailable;
	}
	
	public void setMemoryCapacityPerContainer(Integer memoryCapacityPerContainer){
		this.memoryCapacityPerContainer = memoryCapacityPerContainer;
	}

}
