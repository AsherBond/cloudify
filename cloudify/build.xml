<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<!--
 * Title:        GigaSpaces Cloudify ant file.
 make sure all root directory is already updated with latest src and files from SVN.

 * Copyright:    Copyright (c) 2011
 * Company:      GigaSpaces Technologies Ltd.
 * @author       Alex Beresnev
 * @version      2.0.0
-->


<project name="Cloudify-Assembly" default="prepare.cloudify.package" basedir=".">
	
	<condition property="build.repository.path" value="\\tarzan\builds">
		<os family="windows" />
	</condition>

	<condition property="build.repository.path" value="/export/builds">
		<os family="unix" />
	</condition>

	<condition property="mvn.executable" value="mvn.bat">
            <os family="windows" />
    </condition>

    <condition property="mvn.executable" value="mvn">
            <os family="unix" />
    </condition>
	
    <property environment="env."/>
	<property name="tmp.dir" value="${basedir}/tmp" />
	<property name="gs.version" value="8.0.5" />
	<property name="gs.build.number" value="6000" />
	<property name="gs.milestone" value="ga" />
	<property name="xap.installation.dir" value="gigaspaces-xap-premium-${gs.version}-${gs.milestone}" />
	<property name="xap.zip.name" value="${xap.installation.dir}-b${gs.build.number}.zip" />
	<property name="xap.zip.full.path" value="${build.repository.path}/${gs.version}/build_${gs.build.number}/xap-premium/1.5/${xap.zip.name}" />
	<property name="cloudify.version" value="2.0.0" />
	<property name="cloudify.build.number" value="20" />
	<property name="cloudify.milestone" value="m5" />
	<property name="cloudify.installation.dir" value="gigaspaces-cloudify-${cloudify.version}-${cloudify.milestone}" />
	<property name="cloudify.zip.name" value="${cloudify.installation.dir}-b${cloudify.build.number}.zip" />
	<property name="xap.zip.full.path" value="${build.repository.path}/cloudify/${cloudify.version}/build_${cloudify.build.number}/product/${xap.zip.name}" />
	<property name="CLOUDIFY" value="Cloudify" />
	<property name="cloudify" value="cloudify" />
	<property name="gs.runtime.jar" value="gs-runtime.jar" />
	<property name="gs.boot.jar" value="gs-boot.jar" />
	<property name="usm.local.copy" value="${basedir}/../USM" />
	<property name="esc.local.copy" value="${basedir}/../esc" />
	<property name="recipes.local.copy" value="${basedir}/../recipes" />
	<property name="dsl.local.copy" value="${basedir}/../dsl" />
	<property name="cli.local.copy" value="${basedir}/../CLI" />
	<property name="azure.local.copy" value="${basedir}/../azure" />
	<property name="restful.local.copy" value="${basedir}/../restful" />
	<property name="esc-commands.local.copy" value="${basedir}/../esc-commands" />
	<property name="releases.dir" value="${basedir}/releases" />
	<property name="build.prefix" value="build_" />
	<property name="svnant.repository.user" value="opencm" />
	<property name="svnant.repository.passwd" value="opencm" />
	
	<property name="cloudify.base.publish.url" value="https://s3.amazonaws.com/test-repository-ec2dev" />

	<!-- these should be injected when running the publish build
	<property name="publish.cloudify.build" value="run" /> 
	<property name="put.user" value="AWS User" />
	<property name="put.key" value="AWS Key />
	-->
	
    <target name="updateLUSGroups">
        <echo message="Updating LUS Groups in directory: ${tmp.dir}/${cloudify.installation.dir} ..."/>
        <property name="lookup.group" value="gigaspaces-${CLOUDIFY}-${cloudify.version}-${cloudify.milestone}"/>
    	<replaceregexp match="LOOKUPGROUPS=(.*)" replace="LOOKUPGROUPS=&quot;${lookup.group}&quot;">
    		<fileset dir="${tmp.dir}/${cloudify.installation.dir}" includes="**/*.sh, **/*.bat, **/*.xml"/>
    	</replaceregexp>
    </target>

    <target name="add.cloudify.jars">
    	<property name="jdk" value="1.5"/>

    	<echo message="copy ${gs.runtime.jar} and ${gs.boot.jar} jars into lib"/>
    	<delete file="${tmp.dir}/${cloudify.installation.dir}/lib/platform/boot/${gs.boot.jar}" />	
    	<delete file="${tmp.dir}/${cloudify.installation.dir}/lib/required/${gs.runtime.jar}" /> 
         <copy todir="${tmp.dir}/${cloudify.installation.dir}/lib/required"
              file="${build.repository.path}/${gs.version}/build_${gs.build.number}/jars/${jdk}/${cloudify}/${gs.runtime.jar}" overwrite="true"/>
        <copy todir="${tmp.dir}/${cloudify.installation.dir}/lib/platform/boot"
              file="${build.repository.path}/${gs.version}/build_${gs.build.number}/jars/${jdk}/${cloudify}/${gs.boot.jar}" overwrite="true"/>
    </target>

    <target name="add.cloudify.modules">
        <echo message="Copy USM component"/>
        <copy todir="${tmp.dir}/${cloudify.installation.dir}/lib/platform/usm" overwrite="true">
            <fileset dir="${usm.local.copy}/target/" includes="usm.jar" excludes=".svn"/>
        </copy>

        <copy todir="${tmp.dir}/${cloudify.installation.dir}/lib/platform/esm" overwrite="true">
            <fileset dir="${esc.local.copy}/target/esc/lib" includes="*.jar" excludes=".svn"/>
        </copy>

        <echo message="Copy recipes component"/>
        <mkdir dir="${tmp.dir}/${cloudify.installation.dir}/recipes"/>
     
        <unzip src="${recipes.local.copy}/target/recipes.zip" dest="${tmp.dir}/${cloudify.installation.dir}/recipes"/>
     
        <move todir="${tmp.dir}/${cloudify.installation.dir}/examples">
            <fileset dir="${tmp.dir}/${cloudify.installation.dir}/recipes/applications"/>
        </move>

    	<mkdir dir="${tmp.dir}/${cloudify.installation.dir}/examples/azure/travel" />
		<move todir="${tmp.dir}/${cloudify.installation.dir}/examples/azure/travel">
			<fileset dir="${tmp.dir}/${cloudify.installation.dir}/examples/travel-azure">
			</fileset>
		</move>
    		
        <echo message="Copy dsl component"/>
        <copy todir="${tmp.dir}/${cloudify.installation.dir}/lib/required" overwrite="true">
            <fileset dir="${dsl.local.copy}/target/" includes="dsl.jar" excludes=".svn"/>
        </copy>

        <echo message="Copy CLOUDIFY CLI component"/>
        <copy todir="${tmp.dir}/${cloudify.installation.dir}/tools/cli/" overwrite="true">
            <fileset dir="${cli.local.copy}/target/" includes="cli.jar" excludes=".svn"/>
            <fileset dir="${cli.local.copy}/" includes="cloudify.*" excludes=".svn"/>
        </copy>
    	<copy todir="${tmp.dir}/${cloudify.installation.dir}/bin" overwrite="true">
            <fileset dir="${basedir}/package_build/bin" includes="cloudify.*" excludes=".svn"/>
        </copy>

        <echo message="Copy CLOUDIFY Azure component"/>
        <copy todir="${tmp.dir}/${cloudify.installation.dir}/tools/cli/plugins/azure" overwrite="true">
            <fileset dir="${azure.local.copy}/azure/src/main/resources/azure" includes="**/*" excludes=".svn"/>
            <fileset dir="${azure.local.copy}/azure/target/" includes="azure.jar" excludes=".svn"/>
        </copy>

        <echo message="Copy CLOUDIFY Rest component"/>
        <copy todir="${tmp.dir}/${cloudify.installation.dir}/tools/rest/" overwrite="true">
            <fileset dir="${restful.local.copy}/target/" includes="rest.war" excludes=".svn"/>
            <fileset dir="${restful.local.copy}/tools/restful" includes="restful.*" excludes=".svn"/>
        </copy>

        <echo message="Copy CLOUDIFY esc-command component"/>
        <copy todir="${tmp.dir}/${cloudify.installation.dir}/tools/cli/plugins/esc" overwrite="true">
            <fileset dir="${esc-commands.local.copy}/target/" includes="esc-commands.jar" excludes=".svn"/>
        </copy>
        
        <copy todir="${tmp.dir}/${cloudify.installation.dir}/tools/cli/plugins/esc/ec2" overwrite="true">
          <fileset dir="${esc.local.copy}/" includes="ec2-cloud.groovy" excludes=".svn"/>
        </copy>
                  
        <copy todir="${tmp.dir}/${cloudify.installation.dir}/tools/cli/plugins/esc/ec2/upload" overwrite="true">
            <fileset dir="${esc.local.copy}/config/" includes="bootstrap-management.sh" excludes=".svn"/>
        </copy>
    	
    	<!-- Add Cloudify Javadoc archive to Cloudify/docs folder -->
    	<copy file="${dsl.local.copy}/target/cloudify-javadoc.jar" tofile="${tmp.dir}/${cloudify.installation.dir}/docs/cloudify-javadoc.zip"/>
    	
		<copy todir="${tmp.dir}/${cloudify.installation.dir}" file="${basedir}/package_build/START_HERE.htm"/>
    </target>

	<target name="unzip.xap">
		<delete dir="${tmp.dir}"/>
		<mkdir dir="${tmp.dir}"/>
		<copy file="${xap.zip.full.path}" todir="${tmp.dir}"/>
		<unzip src="${tmp.dir}/${xap.zip.name}" dest="${tmp.dir}" />
		<delete file="${tmp.dir}/${xap.zip.name}"/>
		<move file="${tmp.dir}/${xap.installation.dir}" tofile="${tmp.dir}/${cloudify.installation.dir}" />
		<chmod dir="${tmp.dir}/${cloudify.installation.dir}" includes="**/*.sh, **/*groovy*" perm="775"  />
	</target>

    <target name="prepare.cloudify.package" depends="unzip.xap">
    	<ant target="remove.xap.related.modules" />
        <ant target="updateLUSGroups"/>
        <ant target="add.cloudify.jars"/>
        <ant target="add.cloudify.modules"/>
        <ant target="replace.cloudify.license"/>
    	<ant target="add.azure.artifacts" />
    	<ant target="dos2unix" />
 
    	<!-- conditional task (with property: publish.cloudify.build) -->
    	<ant target="prepare.cloudify.for.publish" />
    	 
        <ant target="archive.versions"/>
    	
    	<!-- conditional task (with property: publish.cloudify.build) -->
    	<ant target="publish.cloudify.to.storage" />
    	
    </target>
	
	<target name="remove.xap.related.modules">
		<delete file="${tmp.dir}/${cloudify.installation.dir}/docs/xap-javadoc.zip" />
		<delete dir="${tmp.dir}/${cloudify.installation.dir}/examples" />
		<delete dir="${tmp.dir}/${cloudify.installation.dir}/tools/benchmark"/>
		<delete>	
            <fileset dir="${tmp.dir}/${cloudify.installation.dir}/bin" includes="gs-focalserver.*, gsInstance.*,
            startJiniTxMahalo.*, puInstance.*, gs-memcached.*"/>
        </delete>
	</target>

    <target name="replace.cloudify.license">
        <delete file="${tmp.dir}/${cloudify.installation.dir}/gslicense.xml"/>
        <copy todir="${tmp.dir}/${cloudify.installation.dir}" file="${basedir}/package_build/gslicense.xml"/>
    </target>
	
	<target name="dos2unix">
    	<!-- Replaces EOLs with LF characters and removes eof characters 
    	from the shell scripts. Tabs and spaces are left as is. -->
    	<fixcrlf srcdir="${tmp.dir}/${cloudify.installation.dir}" 
	    		eol="lf"    		       
	    		eof="remove"
    			includes="**/*.sh" 
	    		defaultexcludes="no"
    	/>
    	<!-- Replaces all EOLs with cr-lf pairs in the batch files. 
    	Tabs and spaces are left as is. EOF characters are left alone if run on DOS systems, 
    	and are removed if run on Unix systems. -->
		<fixcrlf srcdir="${tmp.dir}/${cloudify.installation.dir}"
		       eol="crlf"
		       includes="**/*.bat"
				defaultexcludes="no"
		/>
	</target>

   
    <!-- - - - - - - - - - - - - - - - - -
           target: archive.versions

           - creates  Cloudify
      - - - - - - - - - - - - - - - - - -->

    <target name="archive.versions">
    		<delete dir="${releases.dir}/build_${cloudify.build.number}"/>
            <mkdir dir="${releases.dir}/build_${cloudify.build.number}/${cloudify}/1.5"/>
            <zip destfile="${releases.dir}/build_${cloudify.build.number}/${cloudify}/1.5/gigaspaces-${cloudify}-${cloudify.version}-${cloudify.milestone}-b${cloudify.build.number}.zip">
                <zipfileset dir="${tmp.dir}" includes="**/*" filemode="775"/>
            </zip>
    </target>
	
	<target name="copy.packages.to.build.repository" description="copy packages to build repository" unless="gs.internal.systems.not.available">
       <copy todir="${build.repository.path}/${cloudify}/${cloudify.version}/${build.prefix}${cloudify.build.number}">
           <fileset dir="${releases.dir}/${build.prefix}${cloudify.build.number}"/>
       </copy>
   	</target>
	
	<target name="add.azure.artifacts">
		<copy todir="${tmp.dir}/${cloudify.installation.dir}/tools/cli/plugins/azure" failonerror="false">
       		<fileset dir="${azure.local.copy}" includes="azureconfig.exe*"/>
		</copy>
		
		<delete dir="${builds.dir}${buildnumber}/${cloudify}/azure" includes="azureconfig.exe*" />
		
		<copy todir="${tmp.dir}/${cloudify.installation.dir}/tools/cli/plugins/azure" failonerror="false">
       		<fileset dir="${azure.local.copy}" includes="WorkerRoles.zip"/>
		</copy>
		
		<unzip 
			src="${tmp.dir}/${cloudify.installation.dir}/tools/cli/plugins/azure/WorkerRoles.zip" 
			dest="${tmp.dir}/${cloudify.installation.dir}/tools/cli/plugins/azure"/>

		<delete file="${tmp.dir}/${cloudify.installation.dir}/tools/cli/plugins/azure/WorkerRoles.zip" />
	</target>
	
	<target name="prepare.and.copy.package" depends="prepare.cloudify.package, copy.packages.to.build.repository" />
	

	<target name="publish.cloudify.to.storage" if="publish.cloudify.build">
		
		<property name="put.source" 
			value="${releases.dir}/build_${cloudify.build.number}/${cloudify}/1.5/gigaspaces-${cloudify}-${cloudify.version}-${cloudify.milestone}-b${cloudify.build.number}.zip" />
		<property name="put.target" 
				value="${cloudify.version}/${cloudify.build.number}/gigaspaces-${cloudify}-${cloudify.version}-${cloudify.milestone}-b${cloudify.build.number}.zip" />

		<echo message="uploading cloudify installation to public storage at ${cloudify.base.publish.url}/${put.target}" />
			
		<exec executable="${env.M2_HOME}/bin/${mvn.executable}">
			<arg value="s3client:put" />
			<arg value="-Dput.user=${put.user}" />
			<arg value="-Dput.key=${put.key}" />
			<arg value="-Dput.source=${put.source}" />
			<arg value="-Dput.target=${put.target}" />
		</exec>
	</target>
	
	<target name="prepare.cloudify.for.publish" description="publish cloudify build to gigaspaces repository" if="publish.cloudify.build">
		<ant target="update.service.configuration.url" />
		<ant target="commit.service.configuration" />
	</target>
	
	<target name="update.service.configuration.url">
        <echo message="Updating ServiceConfiguration in directory: ${tmp.dir}/${cloudify.installation.dir}/tools/cli/plugins/azure/WorkerRoles/GigaSpacesWorkerRoles ..."/>
		
		<property name="cloudify.url" 
			value="${cloudify.base.publish.url}/${cloudify.version}/${cloudify.build.number}/gigaspaces-${cloudify}-${cloudify.version}-${cloudify.milestone}-b${cloudify.build.number}.zip" />

		<!-- Here we encode cloudify.url -->
		<property name="groovy.dir" value="${tmp.dir}/${cloudify.installation.dir}/tools/groovy/bin" />

		<condition property="groovy.path" value="${groovy.dir}/groovy.bat">
			<os family="windows"/>
		</condition>
		<condition property="groovy.path" value="${groovy.dir}/groovy">
			<os family="unix"/>
		</condition>
		
		<exec executable="${groovy.path}" outputproperty="cloudify.url.encoded">
			<env key="JAVA_HOME" value="${java.home}" />
			<arg value="-e" />
			<arg value="&quot;println(java.net.URLEncoder.encode('${cloudify.url}'))&quot;" />
		</exec>

		<!-- Make the actual update -->
		<replaceregexp byline="true"
    		match="&lt;Setting name=&quot;GigaSpaces\.XAP\.DownloadUrl&quot; value=&quot;(.*)&quot; /&gt;" 
    		replace="&lt;Setting name=&quot;GigaSpaces\.XAP\.DownloadUrl&quot; value=&quot;${cloudify.url.encoded}&quot; /&gt;">
    		<fileset 
    			dir="${tmp.dir}/${cloudify.installation.dir}/tools/cli/plugins/azure/WorkerRoles/GigaSpacesWorkerRoles" 
    			includes="ServiceConfiguration.Cloud.cscfg" />
    	</replaceregexp>
		
		<replaceregexp byline="true"
    		match="cloudifyUrl &quot;(.*)&quot;" 
    		replace="cloudifyUrl &quot;${cloudify.url}&quot;" >
    		<fileset 
    			dir="${tmp.dir}/${cloudify.installation.dir}/tools/cli/plugins/esc/ec2" 
    			includes="ec2-cloud.groovy" />
    	</replaceregexp>
   </target>
	
	<target name="commit.service.configuration">
		<copy 
			file="${tmp.dir}/${cloudify.installation.dir}/tools/cli/plugins/azure/WorkerRoles/GigaSpacesWorkerRoles/ServiceConfiguration.Cloud.cscfg"
			toFile="${azure.local.copy}/GigaSpacesWorkerRoles/GigaSpacesWorkerRoles/ServiceConfiguration.Cloud.cscfg"
			overwrite="true" />
		
		<copy 
			file="${tmp.dir}/${cloudify.installation.dir}/tools/cli/plugins/esc/ec2/ec2-cloud.groovy"
			toFile="${esc.local.copy}/ec2/ec2-cloud.groovy"
			overwrite="true" />
			
		<exec executable="svn" dir="${basedir}/..">
			<arg value="commit" />
			<arg value="--username" />
			<arg value="${svnant.repository.user}" />
			<arg value="--password" />
			<arg value="${svnant.repository.passwd}" />
			<arg value="-m" />
			<arg value="Update cloudify url in ServiceConfiguration.Cloud.cscfg and in ec2-cloud.groovy" />
			<arg value="azure/GigaSpacesWorkerRoles/GigaSpacesWorkerRoles/ServiceConfiguration.Cloud.cscfg" />
			<arg value="esc/ec2/ec2-cloud.groovy" />
		</exec>
		
		
	</target>
	
	
	
	
</project>
